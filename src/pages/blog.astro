---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";

import { getReadingTime } from "~/components/lib/getReadingTime";
import ExternalLink from "@components/utils/ExternalLink.astro";

import Layout from "@layouts/Layout.astro";
import SkipLink from "@utils/SkipLink.astro";

import blogLogo from "@images/blog-logo-white.svg";
import mastodon from "@images/icons/mastodon-white.svg";
import mail from "@images/icons/mail.svg";
import rss from "@images/icons/rss-feed.svg";

const links = [
  {
    href: "mailto:stvfrnzl@duck.com",
    height: 36,
    externalLink: true,
    name: "E-Mail",
    src: mail,
    width: 36,
  },
  {
    href: "https://mastodon.online/@stvfrnzl",
    height: 36,
    externalLink: true,
    name: "Mastodon",
    src: mastodon,
    width: 36,
  },
  {
    href: "/rss.xml",
    height: 36,
    externalLink: false,
    name: "RSS feed",
    src: rss,
    width: 36,
  },
];

const contentCollection = await getCollection("posts");
contentCollection.sort(
  (first, second) =>
    new Date(second.data.pubDate).getTime() -
    new Date(first.data.pubDate).getTime(),
);

const postsByYear = contentCollection.reduce((acc: any, post) => {
  const year = new Date(post.data.pubDate).getFullYear();
  acc[year] = acc[year] || [];
  acc[year].push(post);
  return acc;
}, {});

const years = Object.keys(postsByYear).sort((a: any, b: any) => b - a);

const socialImageURL = new URL("/blog-thumbnail.png", Astro.url).toString();
---

<Layout
  description="A blog about web accessibility, nerdy music stuff, everything beyond and in-between by Steve Frenzel. Go away if this offends you: 🏳️‍⚧️ 🏳️‍🌈 ✊🏿 🇺🇦 🇵🇸"
  thumbnail={socialImageURL}
  title="Blog by Steve Frenzel"
>
  <div id="blog-wrapper">
    <header>
      <SkipLink />
      <div class="header-container">
        <h1 class="visually-hidden">Blog by Steve Frenzel</h1>
        <div class="image-and-kicker">
          <Image
            alt="Heavy Metal style of the word 'Blog'"
            height="300"
            id="blog-logo"
            src={blogLogo}
            loading="eager"
          />
          <span aria-hidden="true">by Steve Frenzel</span>
        </div>
        <div>
          <p>
            A blog about web accessibility, nerdy music stuff, everything beyond
            and in-between. Go away if this offends you: 🏳️‍⚧️ 🏳️‍🌈 ✊🏿 🇺🇦 🇵🇸
          </p>
          <ul>
            {
              links.map((link) => (
                <li>
                  <Image
                    alt=""
                    height={link.height}
                    src={link.src}
                    width={link.width}
                    loading="eager"
                  />
                  {link.externalLink ? (
                    <ExternalLink href={link.href} name={link.name} />
                  ) : (
                    <a href={link.href}>{link.name}</a>
                  )}
                </li>
              ))
            }
          </ul>
        </div>
      </div>
    </header>
    <main id="main">
      {
        years.map((year) => (
          <div>
            <h2>{year}</h2>
            <ul class="smol-css-grid">
              {postsByYear[year].map((post: any) => (
                <li>
                  {post.data.image ? (
                    <Image
                      alt={post.data.image.alt}
                      src={post.data.image.url}
                    />
                  ) : null}
                  <a href={`/posts/${post.slug}`}>{post.data.title}</a>
                  <time
                    datetime={post.data.pubDate.toISOString().substring(0, 10)}
                  >
                    {post.data.pubDate.toLocaleDateString(undefined, {
                      year: "numeric",
                      month: "long",
                      day: "numeric",
                    })}
                    {""}- {getReadingTime(post.body)} min read
                  </time>
                  <p class="description">{post.data.description}</p>
                  {/* TODO Looks funky on some devices, will change it */}
                  {/* {post.data.tags ? (
                    <ul class="tags">
                      {post.data.tags.map((tag: string) => (
                        <li class="tag">
                          <a class="p-category" href={`/tags/${tag}`}>
                            {tag}
                          </a>
                        </li>
                      ))}
                    </ul>
                  ) : null} */}
                </li>
              ))}
            </ul>
          </div>
        ))
      }
    </main>
  </div>
</Layout>

<style>
  #blog-wrapper {
    margin: 0 auto;
    max-width: 1280px;
    padding: 0 var(--space-s);
  }

  header {
    padding-bottom: var(--space-s);
  }

  header #logo {
    height: auto;
  }

  header p {
    max-width: 50ch;
  }

  header div {
    align-items: center;
    display: flex;
    gap: var(--space-3xs);
    margin-top: var(--space-xs);
  }

  header ul {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-s);
    justify-content: start;
    list-style-type: none;
    margin: var(--space-s) 0 0 0;
    padding: 0;
  }

  header li {
    align-items: center;
    display: flex;
    gap: var(--space-3xs);
  }

  header li:first-child() img {
    margin-right: var(--space-3xs);
  }

  .header-container {
    display: flex;
    flex-direction: column;
  }

  .image-and-kicker {
    align-items: center;
    display: flex;
    flex-direction: row !important;
    flex-wrap: wrap;
    gap: var(--space-s);
    justify-content: center;
    margin-top: 0;
  }

  .image-and-kicker span:nth-child(2) {
    font-family: "Syne", sans-serif;
    font-size: var(--step-2);
    line-height: 1;
  }

  .header-container div {
    flex-direction: column;
  }

  .header-container p {
    text-align: center;
  }

  .smol-css-grid {
    display: grid;
    grid-gap: var(--space-xl);
    grid-template-columns: repeat(auto-fit, minmax(min(100%, 30ch), 1fr));
    margin-top: var(--space-l);
    padding: 0;
  }

  .smol-css-grid img {
    height: auto;
    margin-bottom: var(--space-s);
    width: 100%;
  }

  .smol-css-grid a {
    font-size: var(--step-2);
  }

  time {
    display: block;
    font-size: var(--step-0);
  }

  .description {
    margin-top: var(--space-xs);
  }

  p {
    margin: 0;
  }

  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-xs);
    margin-top: var(--space-s);
    padding: 0;
  }

  .tag {
    border-radius: 5px;
  }

  .tag a {
    border-radius: 5px;
    font-size: var(--step-0);
    padding: var(--space-2xs);
    text-decoration: none;
  }
</style>
