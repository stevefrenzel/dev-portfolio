---
import { storyblokEditable } from '@storyblok/astro';
import { useStoryblokApi } from '@storyblok/astro';

const storyblokApi = useStoryblokApi();

const { data } = await storyblokApi.get('cdn/stories', {
  version: import.meta.env.DEV ? 'draft' : 'published',
  content_type: 'blogPost',
});

const posts = data.stories.map((story: any) => {
  const date = new Date(story.published_at);
  const formattedDate = date.toLocaleDateString('en-US', {
    month: 'long',
    day: 'numeric',
    year: 'numeric',
  });

  return {
    date: formattedDate,
    datetime: date.toISOString().split('T')[0],
    image: story.content.image,
    slug: import.meta.env.DEV ? 'blog/' + story.full_slug : story.full_slug,
    summary: story.content.summary,
    tagList: story.tag_list,
    title: story.content.title,
  };
});

const { blok } = Astro.props;
---

<ul {...storyblokEditable(blok)} role='list'>
  {
    posts.map(
      (post: {
        date: string;
        datetime: string;
        image: string;
        slug: string | URL | null | undefined;
        summary: string;
        tagList: string[] | null | undefined;
        title: string;
      }) => (
        <li>
          <div>
            {post.image ? (
              <img
                alt=''
                height={300}
                decoding='async'
                loading='lazy'
                src={post.image}
                width={300}
              />
            ) : null}
            <h2>
              <a href={post.slug}>{post.title}</a>
            </h2>
            <time class='sub-headline' datetime={post.datetime}>
              {post.date}
            </time>
            <p>{post.summary}</p>
          </div>

          <div class='tags-container'>
            <h3>Keywords</h3>
            <ul class='tags' role='list'>
              {post.tagList?.map((item) => (
                <span role='listitem'>{item}</span>
              ))}
            </ul>
          </div>
        </li>
      )
    )
  }
</ul>

<style lang='scss'>
  ul {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-m);
    list-style-type: none;
    margin: 0 0 var(--space-l) 0;
    padding: 0;
  }

  li {
    border: 1px solid grey;
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    justify-content: space-between;
    width: 400px;

    &:first-child {
      width: 100%;
    }
  }

  img {
    object-fit: cover;
    width: 100%;
  }

  h2,
  .sub-headline,
  p {
    padding: 0 var(--space-s);
  }

  h2 {
    line-height: 1;
    margin-bottom: var(--space-2xs);
  }

  h3 {
    font-size: var(--step-1);
  }

  .sub-headline {
    font-size: var(--space-s);
  }

  p {
    font-family: 'Atkinson Hyperlegible', serif;
    margin: var(--space-s) 0;
  }

  a {
    font-family: 'Syne', sans-serif;
    font-size: var(--step-2);
  }

  .tags-container {
    border: 1px dashed grey;
    border-radius: 10px;
    margin: var(--space-s);
    padding: var(--space-s);
    width: fit-content;

    .tags {
      display: flex;
      flex-wrap: wrap;
      font-family: 'Atkinson Hyperlegible', serif;
      font-size: var(--step-0);
      gap: var(--space-s);
      margin: var(--space-s) 0 0 0;

      span {
        background: var(--color-white-alt);
        border-radius: 5px;
        color: var(--color-black-alt);
        padding: 0 var(--space-3xs);
      }
    }
  }
</style>
