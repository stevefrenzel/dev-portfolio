---
import type { FrontmatterProps } from "src/types/FrontmatterProps";

import { Image } from "astro:assets";

import Layout from "@layouts/Layout.astro";

import SkipLink from "@utils/SkipLink.astro";
// import Webmentions from "@utils/Webmentions.astro";
import ExternalLink from "@components/utils/ExternalLink.astro";

import RelatedTags from "@components/utils/RelatedTags.astro";

import avatar from "public/picture-of-me.jpg";
import badge from "@images/icons/badge.svg";

interface AuthorProps {
  name: string;
  photo: string;
  url: string;
}

interface WebmentionProps {
  author: AuthorProps;
  "wm-received": string;
  "wm-property": string;
}

interface Props {
  frontmatter: FrontmatterProps;
  readingTime: number | undefined;
}

const showDate = (webmention: string) =>
  new Date(webmention).toLocaleDateString(undefined, {
    day: "numeric",
    month: "long",
    year: "numeric",
  });

const { frontmatter, readingTime } = Astro.props;

const dateFormatted = new Date(frontmatter.pubDate).toLocaleDateString(
  undefined,
  { year: "numeric", month: "long", day: "numeric" },
);

const avatarImageUrl = `${Astro.site}picture-of-me.jpg`;
const socialImageUrl = `${Astro.site}thumbnails/${frontmatter.thumbnail}`;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
let webmentions;

try {
  const response = await fetch(
    `https://webmention.io/api/mentions.jf2?target=https://stevefrenzel.dev${Astro.url.pathname}/`,
  );
  const data = await response.json();
  webmentions = data.children;
} catch (error) {
  console.log("There was an error", error);
}
---

<Layout
  description={frontmatter.description}
  thumbnail={socialImageUrl}
  title={`${frontmatter.title} - Steve Frenzel`}
>
  <div id="markdown-wrapper">
    <header>
      <SkipLink />
      <h1>{frontmatter.title}</h1>
      <div class="header-info">
        <div>
          <Image
            alt="Steve Frenzel standing in the woods looking straight into the camera."
            class="avatar"
            height={avatar.height}
            loading="eager"
            src={avatarImageUrl}
            width={avatar.width}
          />
          <div>
            <p class="author-and-date">
              {frontmatter.author} - {dateFormatted}
            </p>
            <time datetime="">{readingTime} minutes read</time>
          </div>
        </div>
        <a href="/blog">Back to blog</a>
      </div>
      <Image
        alt=""
        height={410}
        loading="eager"
        src={frontmatter.image.url}
        width={728}
      />
    </header>
    <main id="main">
      <div id="markdown-content">
        <slot />
      </div>
      <footer id="blog-post-footer">
        <p>
          Send me an <a
            href=`mailto:stvfrnzl@duck.com?subject=Blog article ${frontmatter.title}`
            >email</a
          > or hit me up via
          <ExternalLink
            href="https://mastodon.online/@stvfrnzl"
            iconSize="18px"
            name="Mastodon"
          /> if you have questions or feedback regarding this article.
        </p>

        <!-- <Webmentions webmentions={webmentions} /> -->
        <!-- ! Testing if webmentions don't show because of passing them as props -->
        {
          webmentions.length > 0 ? (
            <section aria-label="Webmentions">
              <h2>Webmentions</h2>
              <ul>
                {webmentions.map((webmention: WebmentionProps) => (
                  <li>
                    {webmention.author.photo ? (
                      <Image
                        alt=""
                        height="50"
                        src={webmention.author.photo}
                        width="50"
                      />
                    ) : null}

                    {webmention["wm-property"] === "like-of" ? (
                      <div
                        aria-label={`Liked by ${webmention.author.name} on ${showDate(webmention["wm-received"])}`}
                      >
                        <time
                          aria-hidden="true"
                          datetime={webmention["wm-received"]}
                        >
                          {showDate(webmention["wm-received"])}
                        </time>
                        <span aria-hidden="true"> - Liked by </span>
                        <a href={webmention.author.url} rel="author">
                          {webmention.author.name}
                        </a>
                      </div>
                    ) : null}

                    {webmention["wm-property"] === "repost-of" ? (
                      <div
                        aria-label={`Reposted by ${webmention.author.name} on ${showDate(webmention["wm-received"])}`}
                      >
                        <time
                          aria-hidden="true"
                          datetime={webmention["wm-received"]}
                        >
                          {showDate(webmention["wm-received"])}
                        </time>
                        <span aria-hidden="true"> - Reposted by </span>
                        <a href={webmention.author.url} rel="author">
                          {webmention.author.name}
                        </a>
                      </div>
                    ) : null}
                  </li>
                ))}
              </ul>
            </section>
          ) : null
        }

        <RelatedTags frontmatter={frontmatter} />
        <Image
          alt="Written by a human"
          class="badge"
          height={badge.height}
          src={badge}
          width={badge.width}
        />
      </footer>
    </main>
  </div>

  <section
    aria-label="Meta data for the IndieWeb"
    class="h-entry visually-hidden"
  >
    <div class="p-name">{frontmatter.title}</div>
    <div class="p-author h-card">
      <Image
        alt="Steve Frenzel"
        height="1"
        class="u-photo"
        src="https://www.stevefrenzel.dev/picture-of-me.jpg"
        width="1"
      />
      {frontmatter.author}
    </div>
    <div class="p-summary">{frontmatter.description}</div>
    <a class="u-url" href={canonicalURL}
      ><div class="dt-published">{dateFormatted}</div></a
    >
    <div class="e-content">
      <slot />
    </div>
    {
      frontmatter.tags.map((tag) => (
        <a class="p-category" href={`/tags/${tag}`}>
          {tag}
        </a>
      ))
    }
  </section>
</Layout>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const markdownContent = document.getElementById("markdown-content");

    if (markdownContent) {
      const anchors = Array.from(markdownContent.getElementsByTagName("a"));

      anchors.forEach((anchor) => {
        const isExternalLink = anchor.hostname !== window.location.hostname;

        if (isExternalLink) {
          const title =
            anchor.getAttribute("title") || anchor.textContent || "Link";
          const ariaLabel = isExternalLink ? `${title} (external link)` : title;
          anchor.setAttribute("aria-label", ariaLabel);
        }
      });
    }
  });
</script>

<style is:global>
  /* Markdown wrapper */

  #markdown-wrapper {
    margin: 0 auto;
    max-width: 777px;
    padding: 0 var(--space-s);
  }

  #markdown-wrapper header a:not(#skip-link) {
    font-size: var(--step-0);
  }

  #markdown-wrapper .header-info {
    align-items: baseline;
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-2xs);
    justify-content: space-between;
    margin-top: var(--space-s);
  }

  #markdown-wrapper .header-info > div {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  #markdown-wrapper header img {
    margin-top: var(--space-m);
  }

  #markdown-wrapper .author-and-date,
  #markdown-wrapper time {
    font-size: var(--step-0);
  }

  #markdown-wrapper .author-and-date {
    margin-top: 0;
  }

  .avatar {
    border-radius: 50%;
    height: auto;
    margin-top: 0 !important;
    max-width: 75px;
  }

  #markdown-wrapper ul:not(.tags) {
    list-style-type: initial;
  }

  #markdown-wrapper img:not(.arrow-down) {
    height: auto;
    width: 100%;
  }

  #markdown-wrapper main pre {
    font-size: var(--step-0);
    padding: var(--space-xs);
  }

  #markdown-wrapper code {
    font-size: var(--step-0);
    padding: 0.2rem 0.3rem;
  }

  #markdown-wrapper h1 code,
  #markdown-wrapper h2 code,
  #markdown-wrapper h3 code,
  #markdown-wrapper h4 code {
    font-size: var(--step-1);
  }

  /* Markdown content */

  #markdown-content blockquote {
    margin: var(--space-m) var(--space-s) 0 var(--space-s);
    padding-left: var(--space-xs);
  }

  #markdown-content blockquote p {
    font-style: italic;
    margin-top: 0;
  }

  #markdown-content p {
    hyphens: auto;
    word-break: break-word;
  }

  #markdown-content img {
    margin-top: var(--space-m);
  }

  #markdown-content table {
    table-layout: fixed;
    border-collapse: collapse;
    margin-top: var(--space-s);
    text-align: center;
  }

  #markdown-content th,
  #markdown-content td {
    padding: var(--space-2xs);
  }

  #markdown-content ol {
    list-style-type: decimal;
  }

  .badge {
    margin: var(--space-m) auto;
    max-width: 222px;
  }

  #blog-post-footer p {
    font-size: var(--step-0);
    font-style: italic;
  }

  #blog-post-footer a {
    font-size: var(--step-0);
  }

  /* Webmentions */

  section[aria-label="Webmentions"] {
    border-radius: 15px;
    margin-top: var(--space-l);
  }

  section[aria-label="Webmentions"] h2 {
    font-size: var(--step-2);
    margin-top: var(--space-s);
  }

  section[aria-label="Webmentions"] .info {
    display: flex;
    gap: var(--space-xs);
    flex-direction: row;
    flex-wrap: wrap;
    font-size: var(--step-0);
    margin-top: var(--space-xs);
  }

  section[aria-label="Webmentions"] a {
    font-size: var(--step-0);
  }

  section[aria-label="Webmentions"] ul {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    gap: var(--space-m);
    padding: 0;
  }

  section[aria-label="Webmentions"] li {
    align-items: center;
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-s);
    list-style-type: none;
  }

  section[aria-label="Webmentions"] div {
    font-size: var(--step-0);
    margin: 0;
  }

  section[aria-label="Webmentions"] img {
    border-radius: 50%;
    margin: 0 !important;
    max-height: 40px;
    max-width: 40px;
  }

  section[aria-label="Webmentions"] time {
    font-size: inherit;
  }
</style>
