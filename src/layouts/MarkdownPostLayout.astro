---
import type { FrontmatterProps } from "../types/FrontmatterProps";
import Layout from "@layouts/Layout.astro";
import SkipLink from "@utils/SkipLink.astro";
import { Image } from "astro:assets";
import ExternalLink from "@components/utils/ExternalLink.astro";
import badge from "@images/icons/badge.svg";

interface Props {
  frontmatter: FrontmatterProps;
  readingTime: number | undefined;
}

const { frontmatter, readingTime } = Astro.props;

const dateFormatted = new Date(frontmatter.pubDate).toLocaleDateString(
  undefined,
  { year: "numeric", month: "long", day: "numeric" },
);

const socialImageUrl = `${Astro.site}thumbnails/${frontmatter.thumbnail}`;
---

<Layout
  description={frontmatter.description}
  thumbnail={socialImageUrl}
  title={`${frontmatter.title} - Steve Frenzel`}
>
  <div id="markdown-wrapper">
    <header>
      <SkipLink />
      <h1>{frontmatter.title}</h1>
      <div class="header-info">
        <div>
          <p class="author-and-date">
            {frontmatter.author} - {dateFormatted}
          </p>
          <time datetime="">{readingTime} minutes read</time>
        </div>
        <a href="/blog">Back to blog</a>
      </div>
      <Image
        alt={frontmatter.image.alt}
        height={410}
        loading="eager"
        src={frontmatter.image.url}
        width={728}
      />
    </header>
    <main id="main">
      <div id="markdown-content">
        <slot />
      </div>
      <footer id="related-tags">
        <h2>Related tags</h2>
        <ul class="tags">
          {
            frontmatter.tags.map((tag) => (
              <li class="tag">
                <a href={`/tags/${tag}`}>{tag}</a>
              </li>
            ))
          }
        </ul>
        <p>
          No comment section (yet), please reach out via <ExternalLink
            href="https://mastodon.online/@stvfrnzl"
            name="Mastodon"
          />
          or
          <a href="mailto:stvfrnzl@duck.go">e-mail</a>!
        </p>
        <Image
          alt="Written by a human"
          id="badge"
          height={badge.height}
          src={badge}
          width={badge.width}
        />
      </footer>
    </main>
  </div>
</Layout>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const markdownContent = document.getElementById("markdown-content");

    if (markdownContent) {
      const anchors = Array.from(markdownContent.getElementsByTagName("a"));

      anchors.forEach((anchor) => {
        const isExternalLink = anchor.hostname !== window.location.hostname;

        if (isExternalLink) {
          const title =
            anchor.getAttribute("title") || anchor.textContent || "Link";
          const ariaLabel = isExternalLink ? `${title} (external link)` : title;
          anchor.setAttribute("aria-label", ariaLabel);
        }
      });
    }
  });
</script>

<style is:global>
  #markdown-wrapper {
    margin: 0 auto;
    max-width: 777px;
    padding: 0 var(--space-s);

    header a:not(#skip-link) {
      font-size: var(--step-0);
    }

    .header-info {
      align-items: baseline;
      display: flex;
      flex-wrap: wrap;
      gap: var(--space-2xs);
      justify-content: space-between;
    }

    header img {
      margin-top: var(--space-m);
    }

    .author-and-date,
    time {
      font-size: var(--step-0);
    }

    ul:not(.tags) {
      list-style-type: initial;
    }

    img:not(.arrow-down) {
      height: auto;
      width: 100%;
    }

    main pre {
      font-size: var(--step-0);
      padding: var(--space-xs);
    }

    code {
      font-size: var(--step-0);
      padding: 0.2rem 0.3rem;
    }

    h1,
    h2,
    h3,
    h4 {
      code {
        font-size: var(--step-1);
      }
    }
  }

  .markdown-content {
    blockquote {
      margin: var(--space-m) var(--space-s) 0 var(--space-s);
      padding-left: var(--space-xs);

      p {
        font-style: italic;
        margin-top: 0;
      }
    }

    p {
      hyphens: auto;
      word-break: break-word;
    }

    img {
      margin-top: var(--space-m);
    }

    table {
      table-layout: fixed;
      border-collapse: collapse;
      margin-top: var(--space-s);
      text-align: center;
    }
    th,
    td {
      padding: var(--space-2xs);
    }

    ol {
      list-style-type: decimal;
    }
  }

  #related-tags {
    margin-top: var(--space-l);
    padding: var(--space-m) 0;

    h2 {
      font-size: var(--step-2);
      margin: 0;
    }

    ul {
      margin-top: var(--space-xs);
    }

    .tags {
      display: flex;
      flex-wrap: wrap;
      gap: var(--space-s);
      padding: 0;
    }

    a {
      border-radius: 5px;
      font-size: var(--step-0);
      padding: var(--space-2xs);
    }

    p {
      font-size: var(--step-0);
      margin-top: var(--space-2xs);

      a {
        background: transparent;
        border-radius: none;
        padding: 0;
      }
    }
  }

  #badge {
    margin-top: var(--space-s);
    max-width: 222px;
  }
</style>
