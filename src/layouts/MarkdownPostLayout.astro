---
import type { FrontmatterProps } from "../types/FrontmatterProps";
import Layout from "@layouts/Layout.astro";
import SkipLink from "@utils/SkipLink.astro";
import { Image } from "astro:assets";
import ExternalLink from "@components/utils/ExternalLink.astro";
import badge from "@images/icons/badge.svg";
import avatar from "public/picture-of-me.jpg";

interface Props {
  frontmatter: FrontmatterProps;
  readingTime: number | undefined;
}

const { frontmatter, readingTime } = Astro.props;

const dateFormatted = new Date(frontmatter.pubDate).toLocaleDateString(
  undefined,
  { year: "numeric", month: "long", day: "numeric" },
);

const avatarImageUrl = `${Astro.site}picture-of-me.jpg`;
const socialImageUrl = `${Astro.site}thumbnails/${frontmatter.thumbnail}`;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<Layout
  description={frontmatter.description}
  thumbnail={socialImageUrl}
  title={`${frontmatter.title} - Steve Frenzel`}
>
  <div id="markdown-wrapper">
    <header>
      <SkipLink />
      <h1>{frontmatter.title}</h1>
      <div class="header-info">
        <div>
          <Image
            alt="Steve Frenzel standing in the woods looking straight into the camera."
            class="avatar"
            height={avatar.height}
            loading="eager"
            src={avatarImageUrl}
            width={avatar.width}
          />
          <div>
            <p class="author-and-date">
              {frontmatter.author} - {dateFormatted}
            </p>
            <time datetime="">{readingTime} minutes read</time>
          </div>
        </div>
        <a href="/blog">Back to blog</a>
      </div>
      <Image
        alt=""
        height={410}
        loading="eager"
        src={frontmatter.image.url}
        width={728}
      />
    </header>
    <main id="main">
      <div id="markdown-content">
        <slot />
      </div>
      <footer id="related-tags">
        <h2>Related tags</h2>
        <ul class="tags">
          {
            frontmatter.tags.map((tag) => (
              <li class="tag">
                <a href={`/tags/${tag}`}>{tag}</a>
              </li>
            ))
          }
        </ul>
        <p>
          No comment section (yet), please reach out via <ExternalLink
            href="https://mastodon.online/@stvfrnzl"
            name="Mastodon"
          />
          or
          <a href="mailto:stvfrnzl@duck.com">e-mail</a>!
        </p>
        <Image
          alt="Written by a human"
          id="badge"
          height={badge.height}
          src={badge}
          width={badge.width}
        />
      </footer>
    </main>
  </div>

  <footer
    aria-label="Meta data for the IndieWeb"
    class="h-entry visually-hidden"
  >
    <div class="p-name">{frontmatter.title}</div>
    <div class="p-author">{frontmatter.author}</div>
    <div class="p-summary">{frontmatter.description}</div>
    <img
      alt="Steve Frenzel"
      class="u-photo"
      src="https://www.stevefrenzel.dev/picture-of-me.jpg"
    />
    <a class="u-url" href={canonicalURL}
      ><div class="dt-published">{dateFormatted}</div></a
    >
    <div class="e-content">
      <slot />
    </div>
    {
      frontmatter.tags.map((tag) => (
        <a class="p-category" href={`/tags/${tag}`}>
          {tag}
        </a>
      ))
    }
  </footer>
</Layout>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const markdownContent = document.getElementById("markdown-content");

    if (markdownContent) {
      const anchors = Array.from(markdownContent.getElementsByTagName("a"));

      anchors.forEach((anchor) => {
        const isExternalLink = anchor.hostname !== window.location.hostname;

        if (isExternalLink) {
          const title =
            anchor.getAttribute("title") || anchor.textContent || "Link";
          const ariaLabel = isExternalLink ? `${title} (external link)` : title;
          anchor.setAttribute("aria-label", ariaLabel);
        }
      });
    }
  });
</script>

<style is:global>
  /* Markdown wrapper */

  #markdown-wrapper {
    margin: 0 auto;
    max-width: 777px;
    padding: 0 var(--space-s);
  }

  #markdown-wrapper header a:not(#skip-link) {
    font-size: var(--step-0);
  }

  #markdown-wrapper .header-info {
    align-items: baseline;
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-2xs);
    justify-content: space-between;
    margin-top: var(--space-s);
  }

  #markdown-wrapper .header-info > div {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  #markdown-wrapper header img {
    margin-top: var(--space-m);
  }

  #markdown-wrapper .author-and-date,
  #markdown-wrapper time {
    font-size: var(--step-0);
  }

  #markdown-wrapper .author-and-date {
    margin-top: 0;
  }

  .avatar {
    border-radius: 50%;
    height: auto;
    margin-top: 0 !important;
    max-width: 75px;
  }

  #markdown-wrapper ul:not(.tags) {
    list-style-type: initial;
  }

  #markdown-wrapper img:not(.arrow-down) {
    height: auto;
    width: 100%;
  }

  #markdown-wrapper main pre {
    font-size: var(--step-0);
    padding: var(--space-xs);
  }

  #markdown-wrapper code {
    font-size: var(--step-0);
    padding: 0.2rem 0.3rem;
  }

  #markdown-wrapper h1 code,
  #markdown-wrapper h2 code,
  #markdown-wrapper h3 code,
  #markdown-wrapper h4 code {
    font-size: var(--step-1);
  }

  /* Markdown content */

  #markdown-content blockquote {
    margin: var(--space-m) var(--space-s) 0 var(--space-s);
    padding-left: var(--space-xs);
  }

  #markdown-content blockquote p {
    font-style: italic;
    margin-top: 0;
  }

  #markdown-content p {
    hyphens: auto;
    word-break: break-word;
  }

  #markdown-content img {
    margin-top: var(--space-m);
  }

  #markdown-content table {
    table-layout: fixed;
    border-collapse: collapse;
    margin-top: var(--space-s);
    text-align: center;
  }

  #markdown-content th,
  #markdown-content td {
    padding: var(--space-2xs);
  }

  #markdown-content ol {
    list-style-type: decimal;
  }

  /* Related tags */

  #related-tags {
    margin-top: var(--space-l);
    padding: var(--space-m) 0;
  }

  #related-tags h2 {
    font-size: var(--step-2);
    margin: 0;
  }

  #related-tags ul {
    margin-top: var(--space-xs);
  }

  #related-tags .tags {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-s);
    padding: 0;
  }

  #related-tags a {
    border-radius: 5px;
    font-size: var(--step-0);
    padding: var(--space-2xs);
  }

  #related-tags p {
    font-size: var(--step-0);
    margin-top: var(--space-2xs);
  }
  #related-tags p a {
    background: transparent;
    border-radius: none;
    padding: 0;
  }

  #badge {
    margin-top: var(--space-s);
    max-width: 222px;
  }
</style>
