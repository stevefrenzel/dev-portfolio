---
import type { FrontmatterProps } from "src/types/FrontmatterProps";

import { Image } from "astro:assets";

import Layout from "@layouts/Layout.astro";

import SkipLink from "@utils/SkipLink.astro";
// import Webmentions from "@utils/Webmentions.astro";
import ExternalLink from "@components/utils/ExternalLink.astro";

import RelatedTags from "@components/utils/RelatedTags.astro";

import badge from "@images/icons/badge.svg";

interface Props {
  frontmatter: FrontmatterProps;
  readingTime: number | undefined;
}

const { frontmatter, readingTime } = Astro.props;

const dateFormatted = new Date(frontmatter.pubDate).toLocaleDateString(
  undefined,
  { year: "numeric", month: "long", day: "numeric" },
);

const socialImageUrl = `${Astro.site}thumbnails/${frontmatter.thumbnail}`;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);

// Fetching webmentions
// const webmentionsUrl = import.meta.env.PROD
//   ? `https://webmention.io/api/mentions.jf2?target=https://stevefrenzel.dev${Astro.url.pathname}`
//   : `https://webmention.io/api/mentions.jf2?target=https://stevefrenzel.dev${Astro.url.pathname}/`;
// const response = await fetch(webmentionsUrl);
// const json = await response.json();
// const webmentions = json.children;
---

<Layout
  description={frontmatter.description}
  thumbnail={socialImageUrl}
  title={`${frontmatter.title} - Steve Frenzel`}
>
  <div id="markdown-wrapper">
    <SkipLink />
    <header>
      <div class="header-container">
        <h1>{frontmatter.title}</h1>

        <div class="header-info">
          <div class="author-and-date">
            <span>
              {frontmatter.author} - {dateFormatted}
            </span>
            <a href="/blog">Back to blog</a>
          </div>
          {
            readingTime ? (
              <time datetime={`0w 0d 0h ${readingTime}m 0s`} id="reading-time">
                {readingTime} min read
              </time>
            ) : null
          }
        </div>

        {
          !frontmatter.showIllustration &&
          frontmatter.image &&
          !frontmatter.hideThumbnail ? (
            <Image
              alt={frontmatter.image.alt}
              id="thumbnail"
              loading="eager"
              src={frontmatter.image.url}
            />
          ) : null
        }

        {
          frontmatter.showIllustration &&
          frontmatter.image &&
          !frontmatter.hideThumbnail ? (
            <Image
              alt={frontmatter.image.alt}
              id="illustration"
              loading="eager"
              src={frontmatter.image.url}
            />
          ) : null
        }
      </div>
    </header>

    <main id="main">
      <div id="markdown-content">
        <slot />
      </div>
      <footer id="blog-post-footer">
        <p id="get-in-touch">
          Send me an <a href="mailto:stvfrnzl@duck.com">email</a> or hit me up via
          <ExternalLink
            href="https://mastodon.online/@stvfrnzl"
            iconSize="18px"
            name="Mastodon"
          /> if you have questions or feedback regarding this article.
        </p>
        <!-- <Webmentions webmentions={webmentions} /> -->
        <RelatedTags frontmatter={frontmatter} />

        <div class="badge-container">
          <a href="https://ko-fi.com/s/4662b19f61">
            <Image
              alt="Written by a human, badge by Andy Carolan"
              class="badge"
              height={badge.height}
              src={badge}
              width={badge.width}
            />
          </a>
        </div>
      </footer>
    </main>
  </div>

  <section
    aria-label="Meta data for the IndieWeb"
    class="h-entry visually-hidden"
  >
    <div class="p-name">{frontmatter.title}</div>
    <div class="p-author h-card">
      <Image
        alt="Steve Frenzel"
        height="1"
        class="u-photo"
        src="https://www.stevefrenzel.dev/picture-of-me.jpg"
        width="1"
      />
      {frontmatter.author}
    </div>
    <div class="p-summary">{frontmatter.description}</div>
    <a class="u-url" href={canonicalURL}>
      <div class="dt-published">{dateFormatted}</div>
    </a>

    <!-- ERROR: Duplicate IDs -->
    <div class="e-content">
      <slot />
    </div>
    {
      frontmatter.tags
        ? frontmatter.tags.map((tag) => (
            <a class="p-category" href={`/tags/${tag}`}>
              {tag}
            </a>
          ))
        : null
    }
  </section>
</Layout>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const markdownContent = document.getElementById("markdown-content");

    if (markdownContent) {
      const anchors = Array.from(markdownContent.getElementsByTagName("a"));

      anchors.forEach((anchor) => {
        const isExternalLink = anchor.hostname !== window.location.hostname;

        if (isExternalLink) {
          const title =
            anchor.getAttribute("title") || anchor.textContent || "Link";
          const ariaLabel = isExternalLink ? `${title} (external link)` : title;
          anchor.setAttribute("aria-label", ariaLabel);
        }
      });
    }
  });
</script>

<style is:global>
  /* Markdown wrapper */

  #markdown-wrapper header {
    background: honeydew;
    color: var(--color-black);
    margin-top: var(--space-l);
    mask: repeating-conic-gradient(
        from 135deg at 50% 30px,
        #0000 0,
        #000 1deg 89deg,
        #0000 90deg 180deg
      )
      50% -30px/60px;
    padding: var(--space-xl) 0;
  }

  #markdown-wrapper header h1 {
    margin: 0;
  }

  .header-container {
    margin: 0 auto;
    max-width: 120ch;
    padding: 0 var(--space-s);
  }

  #markdown-wrapper main {
    margin: 0 auto;
    max-width: 120ch;
    padding: 0 var(--space-s);
  }

  #markdown-wrapper header a:not(#skip-link) {
    font-size: var(--step-0);
  }

  .header-info {
    margin: var(--space-m) 0;
  }

  #markdown-wrapper .author-and-date {
    align-items: center;
    color: var(--color-black);
    display: flex;
    font-family: "Atkinson Hyperlegible", serif;
    font-size: var(--step-0);
    gap: var(--space-xs);
    justify-content: space-between;
  }

  #markdown-wrapper .author-and-date a {
    color: var(--color-black);
  }

  #reading-time,
  #reading-time time {
    color: var(--color-black);
    font-size: var(--step-0);
    margin: 0;
    width: fit-content;
  }

  #markdown-wrapper ul:not(.tags) {
    list-style-type: initial;
  }

  img {
    height: auto;
    width: 100%;
  }

  #illustration {
    height: auto;
    margin: 0 auto;
    width: 500px;
  }

  #markdown-wrapper main pre {
    font-size: var(--step-0);
    padding: var(--space-xs);
  }

  #markdown-wrapper code {
    font-size: var(--step-0);
  }

  #markdown-wrapper h1 code,
  #markdown-wrapper h2 code,
  #markdown-wrapper h3 code,
  #markdown-wrapper h4 code {
    font-size: var(--step-1);
  }

  /* Markdown content */

  #markdown-content blockquote {
    margin: 0 var(--space-s);
    padding-left: var(--space-xs);
  }

  #markdown-content p {
    hyphens: auto;
    word-break: break-word;
  }

  #markdown-content img {
    margin-top: var(--space-m);
  }

  #markdown-content table {
    table-layout: fixed;
    border-collapse: collapse;
    margin-top: var(--space-s);
    text-align: center;
  }

  #markdown-content th,
  #markdown-content td {
    padding: var(--space-2xs);
  }

  #markdown-content ol {
    list-style-type: decimal;
  }

  .badge-container {
    display: flex;
    justify-content: center;
    margin: var(--space-l) 0;
  }

  .badge {
    box-shadow: 0px -1px 30px 0px rgba(248, 187, 207, 0.75);
    min-height: 66.6px;
    transition: 0.3s ease;
  }

  .badge-container a:hover .badge,
  .badge-container a:focus .badge,
  .badge-container a:focus-visible .badge {
    box-shadow: none;
  }

  #blog-post-footer p {
    font-size: var(--step-0);
  }

  #get-in-touch {
    font-style: italic;
  }

  #blog-post-footer a {
    font-size: var(--step-0);
  }
</style>
