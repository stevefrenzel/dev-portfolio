---
import { Image } from '@astrojs/image/components';
import SectionHeader from '@components/SectionHeader.astro';
import ErrorMessage from './ErrorMessage.astro';

import send from '@images/icons/send.svg';
---

<section aria-label='contact' id='contact'>
  <SectionHeader
    ariaLabel='Link to contact'
    accentColor='#49fe18'
    href='#contact'
    title='Contact'
  />
  <p>
    Do you feel like working with me? Do you or your team <mark
      >need a workshop on accessibility and inclusive design</mark
    >? Then just write me via this form:
  </p>
  <form
    action='https://formsubmit.co/8b3ef32a81a2f8b2b736bf54169486ab'
    id='contact-form'
    method='POST'
  >
    <label for='username'>Your name:</label>
    <input
      aria-invalid='false'
      aria-required='true'
      id='username'
      name='name'
      type='text'
    />
    <ErrorMessage id='message-one' text='Error: Please enter your name.' />

    <label for='user-e-mail'>Your e-mail:</label>
    <input
      aria-invalid='false'
      aria-required='true'
      id='user-e-mail'
      name='email'
      type='email'
    />
    <ErrorMessage
      id='message-two'
      text='Error: Please enter a valid e-mail address.'
    />

    <label for='user-message'>Your message:</label>
    <textarea
      aria-invalid='false'
      aria-required='true'
      id='user-message'
      name='message'
      rows='6'></textarea>
    <ErrorMessage
      id='message-three'
      text='Error: Please enter at least ten characters.'
    />

    <div
      aria-live='assertive'
      class='error-summary dont-show'
      id='error-summary'
    >
      <p></p>
    </div>

    <button type='submit'>
      Send message<Image alt='' height={32} src={send} width={32} />
    </button>
  </form>
</section>

<style lang='scss'>
  section {
    max-width: 768px;
  }

  p {
    margin-top: var(--space-xs);
    max-width: 768px;
  }

  form {
    display: flex;
    flex-direction: column;
    margin: var(--space-l) 0 0 0;
    max-width: 768px;

    label:first-child {
      margin-top: 0;
    }
  }

  label {
    margin-bottom: var(--space-3xs);
    margin-top: var(--space-s);
  }

  input {
    cursor: pointer;
    height: 48px;
  }

  textarea {
    resize: vertical;
  }

  #username,
  #user-e-mail,
  #user-message {
    border: none;
    outline-color: var(--color-accent-contact);
  }

  button {
    align-items: center;
    background: var(--color-black);
    border: 3px solid var(--color-white);
    color: var(--color-white);
    cursor: pointer;
    display: flex;
    font-size: var(--step-0);
    height: 72px;
    justify-content: center;
    margin-top: var(--space-l);

    &:hover,
    &:focus,
    &:focus-visible {
      outline-color: var(--color-accent-contact);
    }

    img {
      margin-left: var(--space-xs);
    }
  }

  #error-summary {
    background: #fae9e8;
    border-left: 5px solid red;
    display: flex;
    margin-top: var(--space-l);

    p {
      color: var(--color-black);
      font-style: italic;
      padding: var(--space-3xs);
    }
  }

  mark {
    background: var(--color-accent-contact);
    color: var(--color-black);
  }
</style>

<script>
  const validateForm = (event: Event) => {
    // Inputs
    const usernameInput = document.getElementById(
      'username'
    ) as HTMLInputElement;
    const emailInput = document.getElementById(
      'user-e-mail'
    ) as HTMLInputElement;
    const messageInput = document.getElementById(
      'user-message'
    ) as HTMLTextAreaElement;

    // Error messages
    const usernameError = document.getElementById('message-one');
    const emailError = document.getElementById('message-two');
    const messageError = document.getElementById('message-three');
    const errorSummary = document.getElementById('error-summary');

    // RegEx patterns
    const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

    // Prevent form submission
    event.preventDefault();

    let errors = 0;

    // Username validation
    if (usernameInput.value.trim() === '') {
      usernameError?.classList.remove('dont-show');
      errors++;
    } else {
      usernameError?.classList.add('dont-show');
    }

    // E-mail validation
    if (!emailPattern.test(emailInput.value)) {
      emailError?.classList.remove('dont-show');
      errors++;
    } else {
      emailError?.classList.add('dont-show');
    }

    // Message validation
    if (messageInput.value.trim().length < 10) {
      messageError?.classList.remove('dont-show');
      errors++;
    } else {
      messageError?.classList.add('dont-show');
    }

    // Error summary
    if (errorSummary) {
      if (errors > 0) {
        errorSummary.classList.remove('dont-show');
        const errorSummaryText = `There ${
          errors === 1 ? 'is' : 'are'
        } ${errors} invalid input field${errors === 1 ? '' : 's'}.`;

        const errorSummaryParagraph = errorSummary.querySelector('p');

        if (errorSummaryParagraph) {
          errorSummaryParagraph.textContent = errorSummaryText;
        }
      } else {
        errorSummary.classList.add('dont-show');
        (document.getElementById('contact-form') as HTMLFormElement).submit();
      }
    }
  };

  document
    .getElementById('contact-form')
    ?.addEventListener('submit', validateForm);
</script>
